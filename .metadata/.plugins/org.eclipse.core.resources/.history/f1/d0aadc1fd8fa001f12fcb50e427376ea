package ejercicios;

public class Cadena {

	// atributos
	private String cadenita;

	/**
	 * Constructor con un parametro
	 *
	 * @param Cadena
	 */

	public Cadena(String cadenita) {
		this.cadenita = cadenita;
	}

	/**
	 * @return devuelve la cadena
	 */

	public String getCadenita() {
		return cadenita;
	}

	/**
	 * Metodo que establece una cadena de String a traves de un parametro
	 *
	 * @param cadena a establecer
	 */

	public void setCadenita(String cadenita) {
		this.cadenita = cadenita;
	}

	/**
	 * metodo que cuenta las vocales que se encuentran en una cadena de caracteres
	 *
	 * @param cadena de string
	 * @return numero de vocales
	 */

	public int contarvocales() {
		int vocales = 0;
		char c;
		for (int i = 0; i < this.cadenita.length(); i++) {
			c = this.cadenita.toUpperCase().charAt(i);
			if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {
				vocales++;
			}
		}
		return vocales;

	}

	/**
	 * metodo que cuenta las consonantes de una cadena de caracteres pasada como
	 * parametro
	 *
	 * @param cadena de caracteres
	 * @return numero de consonantes
	 */

	public int contarconsonantes() {
		int consonantes = 0;
		char c;
		for (int i = 0; i < this.cadenita.length(); i++) {
			c = this.cadenita.toUpperCase().charAt(i);
			if (c >= 'B' && c <= 'Z') {
				if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {
					consonantes++;
				}
			}
		}
		return consonantes;

	}

	/**
	 * metodo que devuelve la cadena con las vocales
	 *
	 * @return cadena con las vocales
	 */

	public String muestravocales() {

		String vocales = "";
		char c;
		for (int i = 0; i < this.cadenita.length(); i++) {
			c = this.cadenita.charAt(i);
			if (c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U') {
				vocales += c;
			}
			if (c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
				vocales += c;
			}

		}
		return vocales;

	}

	/**
	 * metodo que devuelve la cadena con las consonantes
	 *
	 * @return cadena con las consonantes
	 */

	public String muestraconsonantes() {

		String consonantes = "";
		char c;
		for (int i = 0; i < this.cadenita.length(); i++) {
			c = this.cadenita.charAt(i);
			if (c >= 'B' && c <= 'Z') {
				if (c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U') {
					consonantes += c + " ";
				}
			}
			if (c >= 'b' && c <= 'z') {
				if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {
					consonantes += c + " ";
				}
			}

		}
		return consonantes;

	}

	/**
	 * metodo que cuenta los espacios
	 *
	 * @return numero de espacios
	 */

	public int contarespacios() {
		int espacios = 0;
		for (int i = 0; i < this.cadenita.length(); i++) {
			if (this.cadenita.charAt(i) == ' ') {
				espacios++;
			}
		}

		return espacios;
	}

	

}
